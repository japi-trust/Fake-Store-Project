{"ast":null,"code":"export const initialState = {\n  cart: [],\n  detail: []\n};\n\nconst reducer = (state, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.payload]\n      };\n\n    case \"ADD_TO_DETAIL\":\n      return { ...state,\n        cart: [...state.cart],\n        detail: [action.payload]\n      };\n\n    case \"ADD_QUANTITY\":\n      return { ...state,\n        cart: [...state.cart],\n        quantity: action.payload\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.payload);\n      let newcart = [...state.cart];\n\n      if (index >= 0) {\n        newcart.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in cart!`);\n      }\n\n      return { ...state,\n        cart: newcart\n      };\n\n    case \"EMPTY_CART\":\n      return { ...state,\n        cart: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/medhanitgebretsadik/Downloads/Final-Project-main/src/Components/reducer/reducer.js"],"names":["initialState","cart","detail","reducer","state","action","type","payload","quantity","index","findIndex","cartItem","id","newcart","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAArB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACE,OAAvB;AAFD,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,CAFD;AAGLC,QAAAA,MAAM,EAAE,CAACG,MAAM,CAACE,OAAR;AAHH,OAAP;;AAMF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,CAFD;AAGLO,QAAAA,QAAQ,EAACH,MAAM,CAACE;AAHX,OAAP;;AAMF,SAAK,kBAAL;AACE,YAAME,KAAK,GAAGL,KAAK,CAACH,IAAN,CAAWS,SAAX,CACXC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACE,OADzB,CAAd;AAGA,UAAIM,OAAO,GAAG,CAAC,GAAGT,KAAK,CAACH,IAAV,CAAd;;AAEA,UAAIQ,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACD,OAFD,MAEO;AACLM,QAAAA,OAAO,CAACC,IAAR,CACG,4BAA2BX,MAAM,CAACO,EAAG,uBADxC;AAGD;;AACD,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,IAAI,EAAEY;AAFD,OAAP;;AAKF,SAAK,YAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,IAAI,EAAE;AAFD,OAAP;;AAKF;AACE,aAAOG,KAAP;AA9CJ;AAgDD,CAlDD;;AAoDA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  cart: [],\r\n  detail: [],\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.payload],\r\n      };\r\n\r\n    case \"ADD_TO_DETAIL\":\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart],\r\n        detail: [action.payload],\r\n      };\r\n\r\n    case \"ADD_QUANTITY\":\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart],\r\n        quantity:action.payload,\r\n      };\r\n\r\n    case \"REMOVE_FROM_CART\":\r\n      const index = state.cart.findIndex(\r\n        (cartItem) => cartItem.id === action.payload\r\n      );\r\n      let newcart = [...state.cart];\r\n\r\n      if (index >= 0) {\r\n        newcart.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          `Cant remove product (id: ${action.id}) as its not in cart!`\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: newcart,\r\n      };\r\n\r\n    case \"EMPTY_CART\":\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}